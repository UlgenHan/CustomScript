-- ~/.config/nvim/init.lua

-- Basic options
vim.opt.number = true
vim.opt.relativenumber = true
vim.opt.tabstop = 4
vim.opt.shiftwidth = 4
vim.opt.expandtab = true
vim.opt.smartindent = true
vim.opt.termguicolors = true
vim.opt.scrolloff = 8
vim.opt.mouse = "" -- No mouse, real men use keys

-- Leader key
vim.g.mapleader = " "

-- Lazy.nvim bootstrap
local lazypath = vim.fn.stdpath("data") .. "/lazy/lazy.nvim"
if not vim.loop.fs_stat(lazypath) then
  vim.fn.system({
    "git", "clone", "--filter=blob:none",
    "https://github.com/folke/lazy.nvim.git", lazypath
  })
end
vim.opt.rtp:prepend(lazypath)

-- Plugin setup
require("lazy").setup({
  { "catppuccin/nvim", name = "catppuccin", priority = 1000 },
  { "nvim-treesitter/nvim-treesitter", build = ":TSUpdate" },
  "nvim-lua/plenary.nvim",
  "nvim-telescope/telescope.nvim",
  "nvim-lualine/lualine.nvim",
  "neovim/nvim-lspconfig",
  "hrsh7th/nvim-cmp",
  "hrsh7th/cmp-nvim-lsp",
  "L3MON4D3/LuaSnip",
})

-- Theme
vim.cmd.colorscheme("catppuccin")

-- Lualine setup
require("lualine").setup {
  options = {
    theme = "catppuccin"
  }
}

-- Treesitter
require("nvim-treesitter.configs").setup {
  highlight = { enable = true },
}

-- LSP
local lspconfig = require("lspconfig")

lspconfig.pylsp.setup {
  cmd = { "/home/youruser/.local/bin/pylsp" } -- Replace with actual path if different
}

lspconfig.tsserver.setup {}
lspconfig.lua_ls.setup {}


-- Completion
local cmp = require("cmp")
cmp.setup {
  mapping = cmp.mapping.preset.insert({
    ['<Tab>'] = cmp.mapping.select_next_item(),
    ['<S-Tab>'] = cmp.mapping.select_prev_item(),
    ['<CR>'] = cmp.mapping.confirm({ select = true }),
  }),
  sources = cmp.config.sources({
    { name = 'nvim_lsp' },
  }),
}
